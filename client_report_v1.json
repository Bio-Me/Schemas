{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/Bio-Me/Schemas/refs/heads/main/client_report_v1.json",
  "$defs": {
    "sampleIdSchema": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9]*.[a-zA-Z0-9]*.[0-9a-f]{8}$"
    },
    "dateSchema": {
      "type": "string",
      "pattern": "^\\d{4}-[01]\\d-[0-3]\\d$"
    },
    "UUIDSchema": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    },
    "productSchema": {
      "type": "object",
      "properties": {
        "name": {
          "enum": [
            "PMP Vaginal Microbiome Health - Core",
            "PMP Skin Microbiome"
          ]
        },
        "version": {
          "type": "string",
          "pattern": "^v\\d+.\\d+$"
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "targetSubSchema": {
      "anyOf": [
        {
          "$ref": "#/$defs/targetBacteriaFungiSubSchema"
        },
        {
          "$ref": "#/$defs/target16SSubSchema"
        },
        {
          "$ref": "#/$defs/targetRNasePSubSchema"
        }
      ]
    },
    "targetBacteriaFungiSubSchema": {
      "properties": {
        "targetOutput": {
          "const": "microbial genome equivalents"
        },
        "targetGroup": {
          "enum": [
            "bacteria",
            "fungi"
          ]
        },
        "targetName": {
          "type": "string"
        }
      }
    },
    "target16SSubSchema": {
      "properties": {
        "targetOutput": {
          "const": "estimated bacterial load"
        },
        "targetGroup": {
          "const": "gene"
        },
        "targetName": {
          "const": "16S"
        }
      }
    },
    "targetRNasePSubSchema": {
      "properties": {
        "targetOutput": {
          "const": "human genome equivalents"
        },
        "targetGroup": {
          "const": "gene"
        },
        "targetName": {
          "const": "RNaseP"
        }
      }
    },
    "quantificationUnitInterpretationSubSchema": {
      "anyOf": [
        {
          "$ref": "#/$defs/quantificationUnitInterpretationPerSwabSubSchema"
        },
        {
          "$ref": "#/$defs/quantificationUnitInterpretationPeruLSubSchema"
        }
      ]
    },
    "quantificationUnitInterpretationPerSwabSubSchema": {
      "properties": {
        "quantificationInterpretation": {
          "const": "copies per swab"
        },
        "quantificationUnit": {
          "const": "#"
        }
      }
    },
    "quantificationUnitInterpretationPeruLSubSchema": {
      "properties": {
        "quantificationInterpretation": {
          "const": "copies per volume of extracted DNA solution"
        },
        "quantificationUnit": {
          "const": "# per uL"
        }
      }
    },
    "measurementSchema": {
      "allOf": [
        {
          "properties": {
            "protocol": {
              "enum": [
                "NA",
                "Extr.v1+VagPMP.v1",
                "VagPMP.v1"
              ]
            }
          }
        },
        {
          "$ref": "#/$defs/targetSubSchema"
        },
        {
          "$ref": "#/$defs/quantificationUnitInterpretationSubSchema"
        },
        {
          "anyOf": [
            {
              "description": "failed measurement",
              "properties": {
                "type": {
                  "const": "FailedMeasurement"
                },
                "measurementStatus": {
                  "enum": [
                    "IPC failure",
                    "image control failure",
                    "amplification control failure"
                  ]
                }
              },
              "required": [
                "type",
                "measurementStatus",
                "protocol",
                "targetOutput",
                "targetGroup",
                "targetName"
              ]
            },
            {
              "properties": {
                "type": {
                  "const": "SuccessfulMeasurement"
                },
                "measurementStatus": {
                  "const": "pass"
                },
                "quantificationRangeUpperLimit": {
                  "type": "number"
                },
                "quantificationRangeLowerLimit": {
                  "type": "number"
                }
              },
              "anyOf": [
                {
                  "description": "successful measurement - quantification in range",
                  "properties": {
                    "quantificationStatus": {
                      "const": "within quantification range"
                    },
                    "quantificationValue": {
                      "type": "number"
                    }
                  }
                },
                {
                  "description": "successful measurement - quantification out of range",
                  "properties": {
                    "quantificationStatus": {
                      "enum": [
                        "above quantification range",
                        "below quantification range"
                      ]
                    },
                    "quantificationValue": {
                      "type": "null"
                    }
                  }
                }
              ],
              "required": [
                "type",
                "measurementStatus",
                "protocol",
                "targetOutput",
                "targetGroup",
                "targetName",
                "quantificationStatus",
                "quantificationValue",
                "quantificationUnits",
                "quantificationInterpretation",
                "quantificationRangeLowerLimit",
                "quantificationRangeUpperLimit"
              ]
            }
          ]
        }
      ]
    },
    "communityStateTypeAnalysisSchema": {
      "type": "object",
      "properties": {
        "type": {
          "const": "CommunityStateType"
        },
        "analysis": {
          "enum": [
            "Community state type assignment [Valencia2020]"
          ]
        },
        "result": {
          "enum": [
            "I",
            "II",
            "III",
            "IV",
            "V",
            "undetermined"
          ]
        }
      },
      "required": [
        "analysis",
        "result"
      ]
    }
  },
  "properties": {
    "type": {
      "const": "BioMeSampleReport"
    },
    "schema": {
      "type": "string",
      "description": "URL to JSON Schema."
    },
    "product": {
      "$ref": "#/$defs/productSchema",
      "description": "Bio-Me product name."
    },
    "sample_id": {
      "$ref": "#/$defs/sampleIdSchema",
      "description": "Sample id assigned by Bio-Me."
    },
    "id": {
      "$ref": "#/$defs/UUIDSchema",
      "description": "Opaque unique identifier for the report."
    },
    "sample_receipt_date": {
      "$ref": "#/$defs/dateSchema",
      "description": "Date when Bio-Me received the sample. 'YYYY-MM-DD' formated."
    },
    "measurements": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/measurementSchema"
      }
    },
    "analyses": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/communityStateTypeAnalysisSchema"
          }
        ]
      }
    }
  },
  "required": [
    "type",
    "product",
    "sample_id",
    "sample_receipt_date",
    "id",
    "measurements"
  ],
  "additionalProperties": false
}